components:
  schemas:

    ContestConnectionSchema:
      type: object
      description: Связь контеста и пользователя
      properties:
        id:
          type: integer
          description: ID Связи контеста и пользователя

        created_at:
          type: string
          format: date-time
          description: Время начала прохождение контеста пользователем

        contest:
          $ref: '#/components/schemas/ContestSchema'

    ContestSchema:
      type: object
      description: Контест с настройками
      properties:
        id:
          type: integer
          description: ID Контеста с настройками
        workshop_id:
          type: integer
          description: ID Сбора

        position:
          type: integer
          description: Позиция контеста в сборах

        time_start:
          type: string
          format: date-time
          description: Время открытия Контеста (если null, то сразу открыт)

        time_stop:
          type: string
          format: date-time
          description: Время закрытия Контеста (если null, то не закрывается)

        is_virtual:
          type: boolean
          description: Виртуальный ли контест, "можно начать в любое время, но доступен не более 3 часов"

        virtual_duration:
          type: integer
          description: Время на прохождение виртуального контеста в секундах

        statement:
          $ref: '#/components/schemas/StatementSchema'

    StatementSchema:
      type: object
      description: Контест с задачами
      properties:
        id:
          type: integer
          minimum: 1
          description: ID Контеста

        name:
          type: string
          description: Название контеста

        summary:
          type: string
          description: Полное название контеста

        problems:
          $ref: '#/components/schemas/ContestProblemSchema'

    ContestProblemSchema:
      type: object
      description: Проблема в контесте
      properties:
        id:
          type: integer
          minimum: 1
          description: ID Контеста

        name:
          type: string
          description: Название проблемы

        rank:
          type: integer
          description: Порядковый номер в Контесте

    ProblemSchema:
      type: object
      description: Задача
      properties:
        id:
          type: integer
          minimum: 1
          description: ID Контеста

        name:
          type: string
          description: Название контеста

        content:
          type: string
          description: Описание задачи

        timelimit:
          type: integer
          description: Ограничение по времени

        memorylimit:
          type: integer
          description: Ограничение по памяти

        description:
          type: string
          description: ???

        sample_tests_json:
          $ref: '#/components/schemas/SampleTest'

        output_only:
          type: boolean
          description: Только output

    SampleTest:
      type: object
      description: Пример входных и выходных данных в задаче
      properties:
        input:
          type: string
          description: Входные данные
        correct:
          type: string
          description: Выходные данные

    UserAuthSchema:
      type: object
      properties:
        id:
        username:
          type: string
          description: Username (логинимся по нему)
        firstname:
          type: string
          description: Имя
        lastname:
          type: string
          description: Фамилия
        email:
          type: string
          description: email
        token:
          type: string
          description: Авторизационный токен
        refresh_token:
          type: string
          description: Рефреш токен (только при логине)

    ProblemSubmissionSchema:
      type: object
      description: Посылки по фильтру
      properties:
        id:
          type: integer
          description: id посылки
        user:
          type: object
          properties:
            id:
              type: integer
              description: Id пользователя
            firstname:
              type: string
              description: Имя
            lastname:
              type: string
              description: Фамилия
        problem:
          type: object
          properties:
            id:
              type: integer
              description: Id задачи
            name:
              type: string
              description: Название задачи
        ejudge_status:
          type: integer
          description: Статус посылки
        create_time:
          type: timestamp
          description: Время отправки
        ejudge_language_id:
          type: integer
          description: Язык
        ejudge_test_num:
          type: integer
          description: Сколько тестов прошло
        ejudge_score:
          type: integer
          description: Score

    RunProtocolSchema:
      type: object
      descroption: Протокол тестирования посылки
      properties:
        compiler_output:
          type: string
        host:
          type: string
          descroption: Хост системы тестирования
        tests:
          type: object
          description: map (номер теста -> данные теста)
          additionalProperties:
            type: object
            description: Номер теста
            properties:
              status:
                type: string
                description: Результат теста, например, "OK"
              time:
                type: integer
                description: Затраченное время, например, 33
              real_time:
                type: integer
                description: Реальное время системы, например, 34
              max_memory_used:
                type: string
                description: Затраченная память, в байтах, например, "380928"
              string_status:
                type: string
                descroption: Результат прохождения теста, например "OK"

    CommentAuthorSchema:
      type: object
      properties:
        id:
          type: integer
          description: Id пользователя
        username:
          type: string
          description: Имя пользователя, может подадобиться при генерации ссылок
        firstname:
          type: string
          description: Имя
        lastname:
          type: string
          description: Фамилия

    CommentSchema:
      type: object
      description: Комментарии к запуску от учителя для ученика. Получаются для текущего авторизованного пользователя
      properties:
        id:
          type: integer
          description: id комментария

        date:
          type: string
          format: date-time
          description: время создания комментария

        comment:
          type: string
          description: текст комментария

        run_id:
          type: integer
          description: id run/submission (посылки), для которой запрошены комментарии

        user_id:
          type: integer
          description: id юзера, для кого предназначается комментарий. В штатном режиме это id текущего авторизованного пользователя

        author_user:
          $ref: '#/components/schemas/CommentAuthorSchema'
          description: объект с данными пользователя — автора комментария (подгружается на основе author_user_id)

    WorkshopSchema:
      type: object
      description: Сбор (воркшоп). Может включать список своих контестов.
      properties:
        id:
          type: integer
          description: id сбора

        name:
          type: string
          description: Название сбора

        is_visible:
          type: boolean
          description: Открыт ли сбор

        contests:
          description: массив со списком контекстов собра
          type: array
          items:
            $ref: '#/components/schemas/ContestSchema'
    Error:
      type: object
      properties:
        status_code:
          type: integer
          minimum: 400
          maximum: 526

        status:
          type: string
          enum: [error]

        error:
          type: string

      required:
        - status_code
        - status
        - error

    Success:
      type: object
      properties:
        status_code:
          type: integer
          enum: [200, 201]

        status:
          type: string
          enum: [success]

        data:
          type: object

      required:
        - status_code
        - status
        - data